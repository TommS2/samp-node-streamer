export declare class DynamicActor {
    static readonly Pool: Array<number>;
    private _id;
    private _modelid;
    private _x;
    private _y;
    private _z;
    private _r;
    private _invulnerable;
    private _health;
    private _worldid;
    private _interiorid;
    private _playerid;
    private _streamdistance;
    private _areaid;
    private _priority;
    constructor(modelid: number, x: number, y: number, z: number, r: number, invulnerable?: number, health?: number, worldid?: number, interiorid?: number, playerid?: number, streamdistance?: number, areaid?: number, priority?: number);
    get id(): number;
    get modelid(): number;
    get x(): number;
    get y(): number;
    get z(): number;
    get r(): number;
    get invulnerable(): number;
    get health(): number;
    get worldid(): number;
    get interiorid(): number;
    get playerid(): number;
    get streamdistance(): number;
    get areaid(): number;
    get priority(): number;
    destroy(): void;
    isStreamedForPlayer(playerid: number): any;
    set worldid(virtualworld: number);
    applyAnimation(animlib: string, animname: string, fdelta: number, loop: number, lockx: number, locky: number, freeze: number, time: number): void;
    clearAnimations(): void;
    getFacingAngle(): any;
    setFacingAngle(angle: number): void;
    setPos(x: number, y: number, z: number): void;
    setHealth(health: number): void;
    setInvulnerable(invulnerable: 0 | 1): void;
}
